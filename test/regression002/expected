reg001.idr:2:1-9:
  |
2 | foo a a x = x
  | ~~~~~~~~~
When checking left hand side of foo:
Can't match on foo a a x

reg003a.idr:4:13-38:
  |
4 |     ECons : Nat -> OddList -> EvenList
  |             ~~~~~~~~~~~~~~~~~~~~~~~~~~
When checking type of Main.ECons:
No such variable OddList

reg003a.idr:7:13-38:
  |
7 |     OCons : Nat -> EvenList -> OddList
  |             ~~~~~~~~~~~~~~~~~~~~~~~~~~
When checking type of Main.OCons:
No such variable EvenList

reg003a.idr:9:6:
  |
9 | test : EvenList
  |      ^
When checking type of Main.test:
No such variable EvenList

reg006.idr:17:1-23:
   |
17 | lookup k Leaf = Nothing
   | ~~~~~~~~~~~~~~~~~~~~~~~
RBTree.lookup is possibly not total due to recursive path RBTree.lookup --> RBTree.lookup

reg007.lidr:8:3-13:
  |
8 | > A.n     = Z    -- This is where it's at!
  |   ~~~~~~~~~~~
A.n is already defined

reg007.lidr:12:13-18:
   |
12 | > hurrah  = isSame
   |             ~~~~~~
When checking right hand side of hurrah with expected type
        0 = 1

Type mismatch between
        n = lala (Type of isSame)
and
        0 = 1 (Expected type)

Specifically:
        Type mismatch between
                1
        and
                0

reg010.idr:5:3-26:
  |
5 |   unsafeSubst P x x px | _ = px
  |   ~~~~~~~~~~~~~~~~~~~~~~~~
When checking left hand side of with block in usubst.unsafeSubst:
Can't match on with block in usubst.unsafeSubst warg a P x x px

reg018a.idr:16:1-18:
   |
16 | minusCoNat Z n = Z
   | ~~~~~~~~~~~~~~~~~~
conat.minusCoNat is possibly not total due to recursive path conat.minusCoNat --> conat.minusCoNat

reg018a.idr:21:1-42:
   |
21 | loopForever = minusCoNat infinity infinity
   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
conat.loopForever is possibly not total due to: conat.minusCoNat

reg018b.idr:8:1-28:
  |
8 | showB (I x) = "I" ++ showB x
  | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A.showB is possibly not total due to recursive path A.showB --> A.showB

reg018b.idr:11:1-6:
   |
11 | Show B where show = showB
   | ~~~~~~
A.B implementation of Prelude.Show.Show is possibly not total due to: A.showB

